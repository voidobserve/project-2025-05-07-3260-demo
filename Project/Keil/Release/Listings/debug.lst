C51 COMPILER V9.60.7.0   DEBUG                                                             07/15/2025 10:17:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Release\Objects\debug.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\Source\debug.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(
                    -0X000C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listing
                    -s\debug.lst) OBJECT(.\Release\Objects\debug.obj)

line level    source

   1          /**
   2           ******************************************************************************
   3           * @file    debug.c
   4           * @author  HUGE-IC Application Team
   5           * @version V1.0.0
   6           * @date    01-05-2021
   7           * @brief   This file contains the debug function.
   8           ******************************************************************************
   9           * @attention
  10           *
  11           * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  12           *
  13           *
  14           *
  15           ******************************************************************************
  16           */
  17          
  18          /* Includes ------------------------------------------------------------------*/
  19          #include "include.h"
  20          
  21          /** @addtogroup Template_Project
  22           * @{
  23           */
  24          
  25          /* Private typedef -----------------------------------------------------------*/
  26          /* Private define ------------------------------------------------------------*/
  27          /* Private macro -------------------------------------------------------------*/
  28          /* Private variables ---------------------------------------------------------*/
  29          /* Private function prototypes -----------------------------------------------*/
  30          /* Private functions ---------------------------------------------------------*/
  31          
  32          #if DBG_PRINTF_EN
              // 重写puchar()函数
              char putchar(char c)
              {
                  while (!(UART1_STA & UART_TX_DONE(0x01)))
                      ;
                  UART1_DATA = c;
              
                  return c;
              }
              #endif
  43          
  44          /**
  45           * @brief  Debug puchar function
  46           * @param  uart_data : Data that needs to be sent
  47           * @retval None
  48           */
  49          void debug_putchar(u8 uart_data)
  50          {
  51   1          while (!(UART1_STA & UART_TX_DONE(0x01)))
  52   1              ;
  53   1          UART1_DATA = uart_data;
C51 COMPILER V9.60.7.0   DEBUG                                                             07/15/2025 10:17:44 PAGE 2   

  54   1          while (!(UART1_STA & UART_TX_DONE(0x01)))
  55   1              ;
  56   1      }
  57          
  58          /**
  59           * @brief  Debug initialization function
  60           * @param  None
  61           * @retval None
  62           */
  63          void debug_init(void)
  64          {
  65   1          // u8 i = 0;
  66   1      
  67   1          // TX---P30(R16)
  68   1      
  69   1          // P3_MD0   &= ~GPIO_P30_MODE_SEL(0x03);
  70   1          // P3_MD0   |=  GPIO_P30_MODE_SEL(0x01);
  71   1          // FOUT_S30  =  GPIO_FOUT_UART1_TX;
  72   1      
  73   1          P2_MD1 &= ~GPIO_P25_MODE_SEL(0x03);
  74   1          P2_MD1 |= GPIO_P25_MODE_SEL(0x01);
  75   1          FOUT_S25 = GPIO_FOUT_UART0_TX;
  76   1      
  77   1          UART0_BAUD1 = (((SYSCLK - DEBUG_BAUD) / DEBUG_BAUD) >> 8) & 0xFF;
  78   1          UART0_BAUD0 = ((SYSCLK - DEBUG_BAUD) / DEBUG_BAUD) & 0xFF;
  79   1          UART0_CON0 = UART_EN(0x01); // UART使能
  80   1      }
  81          
  82          /**
  83           * @brief  Debug User printf function
  84           * @param  p_data : The string to send
  85           * @retval None
  86           */
  87          // void user_printf(char *p_data)
  88          // {
  89          //     while (*p_data != '\0')
  90          //     {
  91          //         debug_putchar(*p_data++);
  92          //     }
  93          // }
  94          
  95          /*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     39    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
