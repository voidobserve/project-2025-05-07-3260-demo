C51 COMPILER V9.60.7.0   LED_HANDLE                                                        07/14/2025 14:05:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LED_HANDLE
OBJECT MODULE PLACED IN .\Release\Objects\led_handle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\led_handle.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C)
                    - INCDIR(..\..\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\led_h
                    -andle.lst) OBJECT(.\Release\Objects\led_handle.obj)

line level    source

   1          #include "led_handle.h"
   2          
   3          volatile u8 cur_led_mode; // 当前的LED模式
   4          // TODO:需要初始化为5
   5          volatile u8 bat_remaining_power_indication = 5; // 电池剩余电量指示挡位
   6          volatile u8 cur_initial_discharge_gear = 5;     // 初始放电挡位（需要记忆）
   7          volatile u8 cur_discharge_rate = 1;             // 初始放电速率（需要记忆）
   8          
   9          volatile u8 flag_is_update_led_mode_times_come = 0; // 标志位，LED模式的刷新时间到来
  10          
  11          #if 0
              /* 滑动平均 */
              static volatile u16 bat_adc_val_samples[BAT_ADC_VAL_SAMPLE_COUNT];
              static volatile u8 bat_adc_val_sample_index = 0;
              u16 get_filtered_bat_adc_val(u16 bat_adc_val)
              {
                  u8 i = 0;
                  u32 sum = 0;
                  bat_adc_val_samples[bat_adc_val_sample_index++] = bat_adc_val;
                  if (bat_adc_val_sample_index >= BAT_ADC_VAL_SAMPLE_COUNT)
                      bat_adc_val_sample_index = 0;
              
                  for (i = 0; i < BAT_ADC_VAL_SAMPLE_COUNT; i++)
                      sum += bat_adc_val_samples[i];
              
                  return sum / BAT_ADC_VAL_SAMPLE_COUNT;
              }
              #endif
  29          
  30          // 更新LED指示灯
  31          void led_handle_update_percent_of_bat(void)
  32          {
  33   1          // bat_adc_val = 4095; // 测试用
  34   1          // bat_adc_val = get_filtered_bat_adc_val(bat_adc_val); // 得到滑动平均滤波后的值
  35   1      
  36   1          if (CUR_LED_MODE_OFF == cur_led_mode)
  37   1          {
  38   2              refresh_led_mode_status(); // 关闭所有指示灯
  39   2              return;
  40   2          }
  41   1      
  42   1          // 如果当前处于电池电量指示模式
  43   1          // 设备处于放电时，电量指示灯只显示电池电量降低的部分
  44   1          if (CUR_LED_MODE_BAT_INDICATOR == cur_led_mode)
  45   1          {
  46   2              /* 点亮指示灯1（放电模式，指示灯1始终点亮） */
  47   2              LED_1_ON();
  48   2      
  49   2              /*
  50   2                  根据电池电压来划分
  51   2                  如果电池电压小于5格
  52   2              */
  53   2              if (bat_adc_val > BAT_ADC_VAL_4)
C51 COMPILER V9.60.7.0   LED_HANDLE                                                        07/14/2025 14:05:20 PAGE 2   

  54   2              {
  55   3                  // 电池电量大于4格
  56   3                  if (bat_remaining_power_indication >= 5)
  57   3                  {
  58   4                      bat_remaining_power_indication = 5;
  59   4                  }
  60   3              }
  61   2      
  62   2              if (bat_adc_val < BAT_ADC_VAL_4)
  63   2              {
  64   3                  // 小于5格对应的电量
  65   3                  if (bat_remaining_power_indication >= 4)
  66   3                  {
  67   4                      bat_remaining_power_indication = 4;
  68   4                  }
  69   3              }
  70   2      
  71   2              if (bat_adc_val < BAT_ADC_VAL_3)
  72   2              {
  73   3                  // 小于4格对应的电量
  74   3                  if (bat_remaining_power_indication >= 3)
  75   3                  {
  76   4                      bat_remaining_power_indication = 3;
  77   4                  }
  78   3              }
  79   2      
  80   2              if (bat_adc_val < BAT_ADC_VAL_2)
  81   2              {
  82   3                  // 小于3格对应的电量
  83   3                  if (bat_remaining_power_indication >= 2)
  84   3                  {
  85   4                      bat_remaining_power_indication = 2;
  86   4                  }
  87   3              }
  88   2      
  89   2              if (bat_adc_val < BAT_ADC_VAL_1)
  90   2              {
  91   3                  // 小于2格对应的电量
  92   3                  // if (bat_remaining_power_indication >= 2)
  93   3                  {
  94   4                      bat_remaining_power_indication = 1;
  95   4                  }
  96   3              }
  97   2      
  98   2              if (bat_remaining_power_indication >= 5)
  99   2              {
 100   3                  LED_5_ON();
 101   3              }
 102   2              else
 103   2              {
 104   3                  LED_5_OFF();
 105   3              }
 106   2      
 107   2              if (bat_remaining_power_indication >= 4)
 108   2              {
 109   3                  LED_4_ON();
 110   3              }
 111   2              else
 112   2              {
 113   3                  LED_4_OFF();
 114   3              }
 115   2      
C51 COMPILER V9.60.7.0   LED_HANDLE                                                        07/14/2025 14:05:20 PAGE 3   

 116   2              if (bat_remaining_power_indication >= 3)
 117   2              {
 118   3                  LED_3_ON();
 119   3              }
 120   2              else
 121   2              {
 122   3                  LED_3_OFF();
 123   3              }
 124   2      
 125   2              if (bat_remaining_power_indication >= 2)
 126   2              {
 127   3                  LED_2_ON();
 128   3              }
 129   2              else
 130   2              {
 131   3                  LED_2_OFF();
 132   3              }
 133   2          } // if (CUR_LED_MODE_BAT_INDICATOR == cur_led_mode)
 134   1          // else if (CUR_LED_MODE_INITIAL_DISCHARGE_GEAR == cur_led_mode)   // 初始放电挡位指示模式
 135   1          else // 处于初始放电挡位指示模式或是初始放电速率指示模式
 136   1          {
 137   2              if (CUR_LED_MODE_DISCHARGE_RATE == cur_led_mode)
 138   2              {
 139   3                  // 放电速率指示模式
 140   3                  switch (cur_discharge_rate)
 141   3                  {
 142   4                  case 1:
 143   4                      LED_1_ON();
 144   4                      break;
 145   4                  case 2:
 146   4                      LED_2_ON();
 147   4                      break;
 148   4                  case 3:
 149   4                      LED_3_ON();
 150   4                      break;
 151   4                  }
 152   3              }
 153   2          }
 154   1          // else if (CUR_LED_MODE_DISCHARGE_RATE == cur_led_mode)
 155   1          // {
 156   1          //     // 放电速率指示模式
 157   1      
 158   1          //     if (flag_is_special_led_mode_times_come) // 时间到来，回到电池电量指示模式
 159   1          //     {
 160   1          //         cur_led_mode = CUR_LED_MODE_BAT_INDICATOR;
 161   1          //         flag_is_special_led_mode_times_come = 0;
 162   1          //     }
 163   1          // }
 164   1      
 165   1          if (flag_is_update_led_mode_times_come) // 时间到来，回到电池电量指示模式
 166   1          {
 167   2              flag_is_update_led_mode_times_come = 0;
 168   2      
 169   2              if (cur_light_pwm_duty_val) // 如果灯光还是亮着的
 170   2              {
 171   3                  cur_led_mode = CUR_LED_MODE_BAT_INDICATOR;
 172   3              }
 173   2              else // 如果灯光已经熄灭
 174   2              {
 175   3                  cur_led_mode = CUR_LED_MODE_OFF;
 176   3              }
 177   2      
C51 COMPILER V9.60.7.0   LED_HANDLE                                                        07/14/2025 14:05:20 PAGE 4   

 178   2              flag_is_in_setting_mode = 0; // 退出设置模式
 179   2          }
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
