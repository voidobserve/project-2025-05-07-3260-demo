C51 COMPILER V9.60.7.0   IR_HANDLE                                                         07/01/2025 17:13:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IR_HANDLE
OBJECT MODULE PLACED IN .\Release\Objects\ir_handle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\ir_handle.c OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDIR
                    -(..\..\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\ir_handle.ls
                    -t) OBJECT(.\Release\Objects\ir_handle.obj)

line level    source

   1          #include "ir_handle.h"
   2          #include "user_config.h"
   3          
   4          volatile u8 ir_data = 0;
   5          volatile bit flag_is_recv_ir_repeat_code = 0;
   6          volatile bit flag_is_recved_data = 0;
   7          
   8          volatile bit flag_is_in_setting_mode = 0; // 是否处于设置模式
   9          
  10          void refresh_led_mode_status(void)
  11          {
  12   1          // 每次按下，清除退出时间计时
  13   1          special_led_mode_times_cnt = 0;
  14   1      
  15   1          // 切换LED要显示的模式前，先关闭所有指示灯
  16   1          LED_1_OFF();
  17   1          LED_2_OFF();
  18   1          LED_3_OFF();
  19   1          LED_4_OFF();
  20   1          LED_5_OFF();
  21   1      }
  22          
  23          /*
  24              set_led_mode
  25          
  26              CUR_LED_MODE_BAT_INDICATOR = 0,      // 电池电量指示模式
  27              CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, // 初始放电挡位 -- 从 xx% PWW开始放电
  28              CUR_LED_MODE_DISCHARGE_RATE,         // 放电速率
  29          */
  30          void set_led_mode_status(u8 set_led_mode, u8 val)
  31          {
  32   1          if (flag_is_in_setting_mode)
  33   1          {
  34   2              if (CUR_LED_MODE_INITIAL_DISCHARGE_GEAR == set_led_mode)
  35   2              {
  36   3                  cur_initial_discharge_gear = val;
  37   3              }
  38   2              else // CUR_LED_MODE_DISCHARGE_RATE == set_led_mode
  39   2              {
  40   3                  cur_discharge_rate = val;
  41   3              }
  42   2      
  43   2              cur_led_mode = set_led_mode;
  44   2              refresh_led_mode_status();
  45   2          }
  46   1      }
  47          
  48          void ir_handle(void)
  49          {
  50   1          if (flag_is_recved_data)
  51   1          {
  52   2              flag_is_recved_data = 0;
  53   2      
C51 COMPILER V9.60.7.0   IR_HANDLE                                                         07/01/2025 17:13:45 PAGE 2   

  54   2              switch (ir_data)
  55   2              {
  56   3              case IR_KEY_RED:
  57   3                  // 大摇控器的红色按键，小遥控器的绿色按键
  58   3      
  59   3                  if (flag_is_in_setting_mode)
  60   3                  {
  61   4                      // 正处于设置模式，不响应
  62   4                      return;
  63   4                  }
  64   3      
  65   3                  refresh_led_mode_status();
  66   3                  cur_led_mode++;
  67   3                  if (cur_led_mode > CUR_LED_MODE_DISCHARGE_RATE)
  68   3                  {
  69   4                      cur_led_mode = CUR_LED_MODE_BAT_INDICATOR;
  70   4                  }
  71   3      
  72   3                  break;
  73   3      
  74   3              case IR_KEY_NUM_1:
  75   3                  // 数字1
  76   3      
  77   3                  set_led_mode_status(CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, 1);
  78   3      
  79   3                  break;
  80   3      
  81   3              case IR_KEY_BRIGHTNESS_SUB_OR_NUM_2:
  82   3                  // 亮度减，也是小遥控器的数字2
  83   3      
  84   3                  set_led_mode_status(CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, 2);
  85   3      
  86   3                  break;
  87   3      
  88   3              case IR_KEY_3H_OR_NUM_3:
  89   3                  // 3H，也是小遥控器的数字3
  90   3      
  91   3                  set_led_mode_status(CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, 3);
  92   3      
  93   3                  break;
  94   3      
  95   3              case IR_KEY_BRIGHTNESS_ADD_OR_NUM_4:
  96   3                  // 亮度加，也是小遥控器的数字4
  97   3      
  98   3                  set_led_mode_status(CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, 4);
  99   3      
 100   3                  break;
 101   3      
 102   3              case IR_KEY_AUTO_OR_NUM_5:
 103   3                  // 自动模式 ，也是小遥控器的数字5
 104   3      
 105   3                  set_led_mode_status(CUR_LED_MODE_INITIAL_DISCHARGE_GEAR, 5);
 106   3      
 107   3                  break;
 108   3      
 109   3              case IR_KEY_5H_OR_M1:
 110   3                  // 5H，也是小遥控器的M1
 111   3      
 112   3                  set_led_mode_status(CUR_LED_MODE_DISCHARGE_RATE, 1);
 113   3      
 114   3                  break;
 115   3      
C51 COMPILER V9.60.7.0   IR_HANDLE                                                         07/01/2025 17:13:45 PAGE 3   

 116   3              case IR_KEY_M2:
 117   3                  // 小遥控器的M2
 118   3      
 119   3                  set_led_mode_status(CUR_LED_MODE_DISCHARGE_RATE, 2);
 120   3      
 121   3                  break;
 122   3      
 123   3              case IR_KEY_8H_OR_M3:
 124   3                  // 8H，也是小遥控器的M3
 125   3      
 126   3                  set_led_mode_status(CUR_LED_MODE_DISCHARGE_RATE, 3);
 127   3      
 128   3                  break;
 129   3      
 130   3              case IR_KEY_SET:
 131   3                  // SET 模式设置
 132   3      
 133   3                  flag_is_in_setting_mode = 1;
 134   3                  cur_led_mode = CUR_LED_MODE_INITIAL_DISCHARGE_GEAR;
 135   3                  refresh_led_mode_status();
 136   3      
 137   3                  break;
 138   3      
 139   3              case IR_KEY_ON:
 140   3                  // 开灯
 141   3      
 142   3                  /* 根据初始的放电挡位来设定灯光对应的pwm占空比 */
 143   3                  switch (cur_initial_discharge_gear)
 144   3                  {
 145   4                  case 1:
 146   4      
 147   4                      break;
 148   4      
 149   4                  case 2:
 150   4      
 151   4                      break;
 152   4      
 153   4                  case 3:
 154   4      
 155   4                      break;
 156   4      
 157   4                  case 4:
 158   4                      // 初始放电挡位 4档，刚开始是 56.98%开始放电
 159   4                      expect_light_pwm_duty_val = (u8)((u32)255 * 5698 / 10000);                
 160   4      
 161   4                      break;
 162   4      
 163   4                  case 5:
 164   4                      // 初始放电挡位 5档，刚开始是 49.8%开始放电
 165   4                      expect_light_pwm_duty_val = (u8)((u32)255 * 4980 / 10000);
 166   4                      
 167   4                      break;
 168   4                  }
 169   3      
 170   3                  cur_light_pwm_duty_val = expect_light_pwm_duty_val;
 171   3                  SET_LIGHT_PWM_DUTY(cur_light_pwm_duty_val);
 172   3                  light_blink();
 173   3                  LIGHT_ON();
 174   3                  cur_led_mode = CUR_LED_MODE_BAT_INDICATOR;
 175   3      
 176   3                  break;
 177   3      
C51 COMPILER V9.60.7.0   IR_HANDLE                                                         07/01/2025 17:13:45 PAGE 4   

 178   3              case IR_KEY_OFF:
 179   3      
 180   3                  if (expect_light_pwm_duty_val > 0) // TODO: 如果未关机
 181   3                  {
 182   4                      light_blink();
 183   4                      // LIGHT_OFF() // light_blink() 最后就是关灯操作，可以不写这一句
 184   4                      expect_light_pwm_duty_val = 0;
 185   4                      cur_light_pwm_duty_val = 0;                
 186   4                      cur_led_mode = CUR_LED_MODE_OFF;
 187   4                  }
 188   3      
 189   3                  break;
 190   3      
 191   3              } // switch (ir_data)
 192   2          } // if (flag_is_recved_data)
 193   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
