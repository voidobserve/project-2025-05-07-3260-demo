C51 COMPILER V9.60.7.0   MAIN                                                              06/27/2025 15:21:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Release\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\main.c OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDIR(..\.
                    -.\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\main.lst) OBJECT(
                    -.\Release\Objects\main.obj)

line level    source

   1          /**
   2           ******************************************************************************
   3           * @file    main.c
   4           * @author  HUGE-IC Application Team
   5           * @version V1.0.0
   6           * @date    01-05-2021
   7           * @brief   Main program body
   8           ******************************************************************************
   9           * @attention
  10           *
  11           * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  12           *
  13           * °æÈ¨ËµÃ÷ºóÐø²¹ÉÏ
  14           *
  15           ******************************************************************************
  16           */
  17          
  18          /* Includes ------------------------------------------------------------------*/
  19          #include "include.h"
  20          #include <stdio.h>
  21          
  22          #include "user_config.h"
  23          
  24          volatile bit_flag flag1 = {0};
  25          volatile bit_flag flag2 = {0};
  26          
  27          
  28          enum
  29          {
  30              CUR_LED_STATUS_NONE = 0x00,
  31              CUR_LED_SHOW_BAT_PERCENT, // ÏÔÊ¾µç³ØµçÁ¿°Ù·Ö±È
  32              CUR_LED_SHOW_DISCHARGE_GEAR, // ÏÔÊ¾·Åµçµ²Î» 1~5µµ
  33              // CUR_LED_SHOW_
  34          }
  35          volatile cur_led_status =0 ;
  36          
  37          //
  38          void led_pin_config(void)
  39          {
  40   1          P1_MD0 &= ~GPIO_P11_MODE_SEL(0x03);
  41   1          P1_MD0 |= GPIO_P11_MODE_SEL(0x01);
  42   1          FOUT_S11 = GPIO_FOUT_AF_FUNC;
  43   1      
  44   1          P1_MD0 &= ~GPIO_P12_MODE_SEL(0x03);
  45   1          P1_MD0 |= GPIO_P12_MODE_SEL(0x01);
  46   1          FOUT_S12 = GPIO_FOUT_AF_FUNC;
  47   1      
  48   1          P1_MD0 &= ~GPIO_P13_MODE_SEL(0x03);
  49   1          P1_MD0 |= GPIO_P13_MODE_SEL(0x01);
  50   1          FOUT_S13 = GPIO_FOUT_AF_FUNC;
  51   1      
  52   1          P1_MD1 &= ~GPIO_P14_MODE_SEL(0x03);
  53   1          P1_MD1 |= GPIO_P14_MODE_SEL(0x01);
C51 COMPILER V9.60.7.0   MAIN                                                              06/27/2025 15:21:54 PAGE 2   

  54   1          FOUT_S14 = GPIO_FOUT_AF_FUNC;
  55   1      
  56   1          P1_MD1 &= ~GPIO_P15_MODE_SEL(0x03);
  57   1          P1_MD1 |= GPIO_P15_MODE_SEL(0x01);
  58   1          FOUT_S15 = GPIO_FOUT_AF_FUNC;
  59   1      }
  60          
  61          /**
  62           * @brief  Main program.
  63           * @param  None
  64           * @retval None
  65           */
  66          void main(void)
  67          {
  68   1          // ¿´ÃÅ¹·Ä¬ÈÏ´ò¿ª, ¸´Î»Ê±¼ä2s
  69   1          WDT_KEY = WDT_KEY_VAL(0xDD); //  ¹Ø±Õ¿´ÃÅ¹· (ÈçÐèÅäÖÃ¿´ÃÅ¹·Çë²é¿´¡°WDT\WDT_Reset¡±Ê¾Àý)
  70   1      
  71   1          system_init();
  72   1      
  73   1          // ¹Ø±ÕHCKºÍHDAµÄµ÷ÊÔ¹¦ÄÜ
  74   1          WDT_KEY = 0x55;  // ½â³ýÐ´±£»¤
  75   1          IO_MAP &= ~0x01; // Çå³ýÕâ¸ö¼Ä´æÆ÷µÄÖµ£¬ÊµÏÖ¹Ø±ÕHCKºÍHDAÒý½ÅµÄµ÷ÊÔ¹¦ÄÜ£¨½â³ýÓ³Éä£©
  76   1          WDT_KEY = 0xBB;  // Ð´Ò»¸öÎÞÐ§µÄÊý¾Ý£¬´¥·¢Ð´±£»¤
  77   1      
  78   1          uart0_config();
  79   1          timer0_config();
  80   1          timer1_pwm_config();
  81   1          timer1_pwm_disable();
  82   1      
  83   1          // timer1_set_pwm_high_feq();
  84   1          // TODO: 7361²»ÓÃ¼ÓÕâ¸öÒý½ÅÅäÖÃ:
  85   1          led_pin_config();
  86   1      
  87   1      
  88   1          adc_config();
  89   1      
  90   1          printf("sys reset\n");
  91   1      
  92   1          // adc_sel_pin(ADC_PIN_DETECT_CHARGE); // ²âÊÔÍ¨¹ý£¬¿ÉÒÔÕý³£¼ì²â¶ÔÓ¦µÄµçÑ¹Öµ
  93   1          // adc_sel_pin(ADC_PIN_DETECT_BATTERY); // ²âÊÔÍ¨¹ý£¬¿ÉÒÔÕý³£¼ì²â¶ÔÓ¦µÄµçÑ¹Öµ
  94   1      
  95   1          // PWM_CTL_FOR_CHARGING_SET_HIGH_FEQ();
  96   1          // ÓÃÏÂÃæµÄÕ¼¿Õ±È³äµç£¬µçÁ÷»á·Ç³£´ó£º
  97   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 10 / 100) >> 8) & 0xFF; // 10%
  98   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 10 / 100) & 0xFF;
  99   1      
 100   1          // ÓÃÕâÒ»À¸³äµç£¨³äµçµçÑ¹5.5~32V£©£¬µçÔ´Ò»²àÏÔÊ¾²»³öµçÁ÷
 101   1          // PWM_CTL_FOR_CHARGING_SET_HIGH_FEQ();
 102   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 1 / 100) >> 8) & 0xFF; // 1%£¬Êµ¼Ê²âÊÔÓÐÊ±ÊÇ0.88%£¬ÓÐÊ±Ê
             -Ç1.3%
 103   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 1 / 100) & 0xFF;
 104   1          // TMR1_PWMH = 0 & 0xFF;
 105   1          // TMR1_PWML = 1 & 0xFF;
 106   1      
 107   1          // ³äµçµçÑ¹µ½ 7-8VÊ±£¬µçÁ÷¾Í»áµ½1A£¬µçÑ¹Ô½¸ß£¬µçÁ÷Ô½´ó
 108   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 5 / 100) >> 8) & 0xFF; // 5%
 109   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 5 / 100) & 0xFF;
 110   1      
 111   1          // ³äµçµçÑ¹µ½11.3VÊ±£¬µçÁ÷»áµ½1A£¬µçÑ¹Ô½¸ß£¬µçÁ÷Ô½´ó
 112   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 2 / 100) >> 8) & 0xFF; // 2%
 113   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 2 / 100) & 0xFF;
 114   1      
C51 COMPILER V9.60.7.0   MAIN                                                              06/27/2025 15:21:54 PAGE 3   

 115   1          // 5V£¬µçÁ÷»áµ½10A
 116   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 80 / 100) >> 8) & 0xFF; //
 117   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 80 / 100) & 0xFF;
 118   1      
 119   1          // ÔÚ5V¸½½ü£¬µçÁ÷5A×óÓÒ
 120   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 60 / 100) >> 8) & 0xFF; //
 121   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 60 / 100) & 0xFF;
 122   1      
 123   1          // {
 124   1          //     u32 tmp = (u32)TIMER1_HIGH_FEQ_PEROID_VAL * 90 / 100;
 125   1      
 126   1          //     TMR1_PWMH = (tmp >> 8) & 0xFF;
 127   1          //     TMR1_PWML = tmp & 0xFF;
 128   1          // }
 129   1      
 130   1          // LED_1_ON();
 131   1          // LED_2_ON();
 132   1          // LED_3_ON();
 133   1          // LED_4_ON();
 134   1          // LED_5_ON();
 135   1      
 136   1          while (1)
 137   1          {
 138   2              // charge_handle();
 139   2              led_handle_update_percent_of_bat();
 140   2          }
 141   1      }
 142          
 143          /**
 144           * @}
 145           */
 146          
 147          /*************************** (C) COPYRIGHT 2022 HUGE-IC ***** END OF FILE *****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    112    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
