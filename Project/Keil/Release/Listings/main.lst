C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2025 17:13:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Release\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\main.c OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000C) INCDIR(..\.
                    -.\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\main.lst) OBJECT(
                    -.\Release\Objects\main.obj)

line level    source

   1          /**
   2           ******************************************************************************
   3           * @file    main.c
   4           * @author  HUGE-IC Application Team
   5           * @version V1.0.0
   6           * @date    01-05-2021
   7           * @brief   Main program body
   8           ******************************************************************************
   9           * @attention
  10           *
  11           * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  12           *
  13           * °æÈ¨ËµÃ÷ºóÐø²¹ÉÏ
  14           *
  15           ******************************************************************************
  16           */
  17          
  18          /* Includes ------------------------------------------------------------------*/
  19          #include "include.h"
  20          #include <stdio.h>
  21          
  22          #include "user_config.h"
  23          
  24          volatile bit_flag flag1 = {0};
  25          volatile bit_flag flag2 = {0};
  26          
  27          volatile u8 cur_light_pwm_duty_val = 0;    // µ±Ç°µÆ¹â¶ÔÓ¦µÄÕ¼¿Õ±ÈÖµ
  28          volatile u8 expect_light_pwm_duty_val = 0; // ÆÚÍûµ÷½Úµ½µÄ¡¢µÆ¹â¶ÔÓ¦µÄÕ¼¿Õ±ÈÖµ
  29          
  30          volatile u16 bat_adc_val;
  31          
  32          volatile u8 flag_is_light_adjust_time_come = 0; // µ÷½ÚµÆ¹âµÄÊ±¼äµ½À´£¬Ä¿Ç°Îª1s
  33          
  34          volatile u16 light_adjust_time_cnt = 0;
  35          
  36          //
  37          void led_pin_config(void)
  38          {
  39   1          P1_MD0 &= ~GPIO_P11_MODE_SEL(0x03);
  40   1          P1_MD0 |= GPIO_P11_MODE_SEL(0x01);
  41   1          FOUT_S11 = GPIO_FOUT_AF_FUNC;
  42   1          P11 = 0; // Èç¹û²»¸ø³õÊ¼Öµ£¬ÉÏµçÖ®ºó£¬Ö¸Ê¾µÆ»áÉÁÒ»ÏÂ
  43   1      
  44   1          P1_MD0 &= ~GPIO_P12_MODE_SEL(0x03);
  45   1          P1_MD0 |= GPIO_P12_MODE_SEL(0x01);
  46   1          FOUT_S12 = GPIO_FOUT_AF_FUNC;
  47   1          P12 = 0;
  48   1      
  49   1          P1_MD0 &= ~GPIO_P13_MODE_SEL(0x03);
  50   1          P1_MD0 |= GPIO_P13_MODE_SEL(0x01);
  51   1          FOUT_S13 = GPIO_FOUT_AF_FUNC;
  52   1          P13 = 0;
  53   1      
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2025 17:13:45 PAGE 2   

  54   1          P1_MD1 &= ~GPIO_P14_MODE_SEL(0x03);
  55   1          P1_MD1 |= GPIO_P14_MODE_SEL(0x01);
  56   1          FOUT_S14 = GPIO_FOUT_AF_FUNC;
  57   1          P14 = 0;
  58   1      
  59   1          P1_MD1 &= ~GPIO_P15_MODE_SEL(0x03);
  60   1          P1_MD1 |= GPIO_P15_MODE_SEL(0x01);
  61   1          FOUT_S15 = GPIO_FOUT_AF_FUNC;
  62   1          P15 = 0;
  63   1      }
  64          
  65          /**
  66           * @brief  Main program.
  67           * @param  None
  68           * @retval None
  69           */
  70          void main(void)
  71          {
  72   1          // ¿´ÃÅ¹·Ä¬ÈÏ´ò¿ª, ¸´Î»Ê±¼ä2s
  73   1          WDT_KEY = WDT_KEY_VAL(0xDD); //  ¹Ø±Õ¿´ÃÅ¹· (ÈçÐèÅäÖÃ¿´ÃÅ¹·Çë²é¿´¡°WDT\WDT_Reset¡±Ê¾Àý)
  74   1      
  75   1          system_init();
  76   1      
  77   1          // ¹Ø±ÕHCKºÍHDAµÄµ÷ÊÔ¹¦ÄÜ
  78   1          WDT_KEY = 0x55;  // ½â³ýÐ´±£»¤
  79   1          IO_MAP &= ~0x01; // Çå³ýÕâ¸ö¼Ä´æÆ÷µÄÖµ£¬ÊµÏÖ¹Ø±ÕHCKºÍHDAÒý½ÅµÄµ÷ÊÔ¹¦ÄÜ£¨½â³ýÓ³Éä£©
  80   1          WDT_KEY = 0xBB;  // Ð´Ò»¸öÎÞÐ§µÄÊý¾Ý£¬´¥·¢Ð´±£»¤
  81   1      
  82   1          uart0_config();
  83   1          timer0_config();
  84   1          timer1_pwm_config();
  85   1          timer1_pwm_disable();
  86   1          timer2_pwm_config(); // ¿ØÖÆµÆ¹âµÄpwm
  87   1          timer2_pwm_disable();
  88   1      
  89   1          // timer1_set_pwm_high_feq();
  90   1          // TODO: 7361²»ÓÃ¼ÓÕâ¸öÒý½ÅÅäÖÃ:
  91   1          led_pin_config();
  92   1      
  93   1          // ºìÍâ½ÓÊÕÒý½Å£º
  94   1          P2_MD0 &= ~(GPIO_P23_MODE_SEL(0x03)); // ÊäÈëÄ£Ê½
  95   1          P2_PU |= GPIO_P23_PULL_UP(0x01);      // ÉÏÀ­
  96   1      
  97   1          adc_config();
  98   1      
  99   1          printf("sys reset\n");
 100   1      
 101   1          // adc_sel_pin(ADC_PIN_DETECT_CHARGE); // ²âÊÔÍ¨¹ý£¬¿ÉÒÔÕý³£¼ì²â¶ÔÓ¦µÄµçÑ¹Öµ
 102   1          // adc_sel_pin(ADC_PIN_DETECT_BATTERY); // ²âÊÔÍ¨¹ý£¬¿ÉÒÔÕý³£¼ì²â¶ÔÓ¦µÄµçÑ¹Öµ
 103   1      
 104   1          // PWM_CTL_FOR_CHARGING_SET_HIGH_FEQ();
 105   1          // ÓÃÏÂÃæµÄÕ¼¿Õ±È³äµç£¬µçÁ÷»á·Ç³£´ó£º
 106   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 10 / 100) >> 8) & 0xFF; // 10%
 107   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 10 / 100) & 0xFF;
 108   1      
 109   1          // ÓÃÕâÒ»À¸³äµç£¨³äµçµçÑ¹5.5~32V£©£¬µçÔ´Ò»²àÏÔÊ¾²»³öµçÁ÷
 110   1          // PWM_CTL_FOR_CHARGING_SET_HIGH_FEQ();
 111   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 1 / 100) >> 8) & 0xFF; // 1%£¬Êµ¼Ê²âÊÔÓÐÊ±ÊÇ0.88%£¬ÓÐÊ±Ê
             -Ç1.3%
 112   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 1 / 100) & 0xFF;
 113   1          // TMR1_PWMH = 0 & 0xFF;
 114   1          // TMR1_PWML = 1 & 0xFF;
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2025 17:13:45 PAGE 3   

 115   1      
 116   1          // ³äµçµçÑ¹µ½ 7-8VÊ±£¬µçÁ÷¾Í»áµ½1A£¬µçÑ¹Ô½¸ß£¬µçÁ÷Ô½´ó
 117   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 5 / 100) >> 8) & 0xFF; // 5%
 118   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 5 / 100) & 0xFF;
 119   1      
 120   1          // ³äµçµçÑ¹µ½11.3VÊ±£¬µçÁ÷»áµ½1A£¬µçÑ¹Ô½¸ß£¬µçÁ÷Ô½´ó
 121   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 2 / 100) >> 8) & 0xFF; // 2%
 122   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 2 / 100) & 0xFF;
 123   1      
 124   1          // 5V£¬µçÁ÷»áµ½10A
 125   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 80 / 100) >> 8) & 0xFF; //
 126   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 80 / 100) & 0xFF;
 127   1      
 128   1          // ÔÚ5V¸½½ü£¬µçÁ÷5A×óÓÒ
 129   1          // TMR1_PWMH = ((TIMER1_HIGH_FEQ_PEROID_VAL * 60 / 100) >> 8) & 0xFF; //
 130   1          // TMR1_PWML = (TIMER1_HIGH_FEQ_PEROID_VAL * 60 / 100) & 0xFF;
 131   1      
 132   1          // {
 133   1          //     u32 tmp = (u32)TIMER1_HIGH_FEQ_PEROID_VAL * 90 / 100;
 134   1      
 135   1          //     TMR1_PWMH = (tmp >> 8) & 0xFF;
 136   1          //     TMR1_PWML = tmp & 0xFF;
 137   1          // }
 138   1      
 139   1          // LED_1_ON();
 140   1          // LED_2_ON();
 141   1          // LED_3_ON();
 142   1          // LED_4_ON();
 143   1          // LED_5_ON();
 144   1      
 145   1          // TODO:
 146   1          // ÉÏµçºó£¬ÐèÒªÏÈµãÁÁºìÉ«Ö¸Ê¾µÆ£¬ÔÙ±äÎªµç³ØµçÁ¿Ö¸Ê¾Ä£Ê½
 147   1          LED_1_ON();
 148   1          delay_ms(1000);
 149   1      
 150   1          // cur_led_mode = CUR_LED_MODE_INITIAL_DISCHARGE_GEAR;
 151   1          cur_led_mode = CUR_LED_MODE_BAT_INDICATOR; // µç³ØµçÁ¿Ö¸Ê¾Ä£Ê½
 152   1          cur_initial_discharge_gear = 5;
 153   1          cur_discharge_rate = 3;
 154   1      
 155   1          while (1)
 156   1          {
 157   2              adc_sel_pin(ADC_PIN_DETECT_BATTERY);
 158   2              bat_adc_val = adc_getval(); // ²É¼¯µç³ØµçÑ¹¶ÔÓ¦µÄadÖµ
 159   2      
 160   2              ir_handle();
 161   2              // charge_handle();
 162   2              led_handle_update_percent_of_bat();
 163   2      
 164   2      #if 1 // »ºÂýµ÷½ÚÇý¶¯µÆ¹âµÄpwmÕ¼¿Õ±È
 165   2      
 166   2              {
 167   3                  // static u8 cnt =0;
 168   3      
 169   3                  // ÔÝ¶¨Ã¿100usµ÷½ÚÒ»´Î
 170   3      
 171   3                  if (cur_light_pwm_duty_val > expect_light_pwm_duty_val)
 172   3                  {
 173   4                      cur_light_pwm_duty_val--;
 174   4                  }
 175   3                  else if (cur_light_pwm_duty_val < expect_light_pwm_duty_val)
 176   3                  {
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2025 17:13:45 PAGE 4   

 177   4                      cur_light_pwm_duty_val++;
 178   4                  }
 179   3      
 180   3                  SET_LIGHT_PWM_DUTY(cur_light_pwm_duty_val);
 181   3                  // timer2_set_pwm_duty(cur_light_pwm_duty_val);
 182   3              }
 183   2      
 184   2      #endif // »ºÂýµ÷½ÚÇý¶¯µÆ¹âµÄpwmÕ¼¿Õ±È
 185   2          }
 186   1      }
 187          
 188          /**
 189           * @}
 190           */
 191          
 192          /*************************** (C) COPYRIGHT 2022 HUGE-IC ***** END OF FILE *****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
