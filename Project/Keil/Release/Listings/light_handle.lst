C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/17/2025 14:33:59 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LIGHT_HANDLE
OBJECT MODULE PLACED IN .\Release\Objects\light_handle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\light_handle.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000
                    -C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\lig
                    -ht_handle.lst) OBJECT(.\Release\Objects\light_handle.obj)

line level    source

   1          // encoding UTF-8
   2          // ÁÅØÂÖâÊéßÂà∂Ê∫êÁ®ãÂ∫è
   3          #include "light_handle.h"
   4          
   5          void light_blink(void)
   6          {
   7   1          u8 i;
   8   1          for (i = 0; i < 3; i++)
   9   1          {
  10   2              LIGHT_ON();
  11   2              delay_ms(161);
  12   2              LIGHT_OFF();
  13   2              delay_ms(161);
  14   2          }
  15   1      }
  16          
  17          void light_init(void)
  18          {
  19   1          /* Ê†πÊçÆÂàùÂßãÁöÑÊîæÁîµÊå°‰ΩçÊù•ËÆæÂÆöÁÅØÂÖâÂØπÂ∫îÁöÑpwmÂç†Á©∫ÊØî */
  20   1          switch (cur_initial_discharge_gear)
  21   1          {
  22   2          case 1:
  23   2              // ÂàùÂßãÊîæÁîµÊå°‰Ωç 1Ê°£ÔºåÂàöÂºÄÂßãÊòØ 83.67%ÂºÄÂßãÊîæÁîµ
  24   2      
  25   2              // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
  26   2              expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 8367 / 10000);
  27   2      
  28   2              break;
  29   2      
  30   2          case 2:
  31   2              // ÂàùÂßãÊîæÁîµÊå°‰Ωç 2Ê°£ÔºåÂàöÂºÄÂßãÊòØ 74.11%ÂºÄÂßãÊîæÁîµ
  32   2      
  33   2              // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
  34   2              expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 7411 / 10000);
  35   2      
  36   2              break;
  37   2      
  38   2          case 3:
  39   2              // ÂàùÂßãÊîæÁîµÊå°‰Ωç 3Ê°£ÔºåÂàöÂºÄÂßãÊòØ 64.55%ÂºÄÂßãÊîæÁîµ
  40   2      
  41   2              // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
  42   2              expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 6455 / 10000);
  43   2      
  44   2              break;
  45   2      
  46   2          case 4:
  47   2              // ÂàùÂßãÊîæÁîµÊå°‰Ωç 4Ê°£ÔºåÂàöÂºÄÂßãÊòØ 56.98%ÂºÄÂßãÊîæÁîµ
  48   2      
  49   2              // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
  50   2              expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 5698 / 10000);
  51   2      
  52   2              break;
  53   2      
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/17/2025 14:33:59 PAGE 2   

  54   2          case 5:
  55   2              // ÂàùÂßãÊîæÁîµÊå°‰Ωç 5Ê°£ÔºåÂàöÂºÄÂßãÊòØ 49.8%ÂºÄÂßãÊîæÁîµ
  56   2      
  57   2              // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
  58   2              expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 4980 / 10000);
  59   2      
  60   2              break;
  61   2          }
  62   1      
  63   1          cur_light_pwm_duty_val = expect_light_pwm_duty_val;
  64   1          timer2_set_pwm_duty(cur_light_pwm_duty_val); // Á´ãÂàªÊõ¥Êñ∞PWMÂç†Á©∫ÊØî
  65   1          LIGHT_ON();                                  // ‰ΩøËÉΩPWMËæìÂá∫
  66   1          light_blink();
  67   1          light_adjust_time_cnt = 0;
  68   1      }
  69          
  70          /**
  71           * @brief ÁÅØÂÖâÊéßÂà∂ÔºàÊîæÁîµÊéßÂà∂Ôºâ
  72           *          ËøõÂÖ•ÂâçË¶ÅÂÖàÁ°ÆËÆ§ expect_light_pwm_duty_val ÁöÑÂÄºÊòØÂê¶ÂàùÂßãÂåñËøá‰∏ÄÊ¨°Ôºå
  73           *          light_adjust_time_cntË∞ÉËäÇÁÅØÂÖâÁöÑÊó∂Èó¥ËÆ°Êó∂ÊòØÂê¶Ê≠£Á°ÆÔºåÂ¶ÇÊûúÂàáÊç¢‰∫ÜÊ®°ÂºèÊàñÊîæÁîµÈ
             -ÄüÂ∫¶ÔºåË¶ÅÂÖàÊ∏ÖÈõ∂
  74           */
  75          void light_handle(void)
  76          {
  77   1          // Â¶ÇÊûúÊ≠£Âú®ÂÖÖÁîµÔºåÁõ¥Êé•ËøîÂõû
  78   1          if (cur_charge_phase != CUR_CHARGE_PHASE_NONE ||
  79   1              cur_led_mode == CUR_LED_MODE_OFF) /* Â¶ÇÊûúÊåáÁ§∫ÁÅØÂ∑≤ÁªèÂÖ≥Èó≠ */
  80   1          {
  81   2              return;
  82   2          }
  83   1      
  84   1          // Â¶ÇÊûúÊú™Âú®ÂÖÖÁîµ
  85   1      
  86   1          // if (flag_is_light_adjust_time_come)
  87   1          // {
  88   1          //     flag_is_light_adjust_time_come = 0;
  89   1          //     light_adjust_time_cnt++;
  90   1          // }
  91   1      
  92   1          if (1 == cur_discharge_rate) // ÊîæÁîµÈÄüÁéá1Ê°£ÔºåM1
  93   1          {
  94   2              /*
  95   2                  ÈÄüÂ∫¶‰∏∫M1Ôºå
  96   2                  1200sÂêéÂèòÂåñ‰∏ÄÊ¨°Âç†Á©∫ÊØîÔºå(1200 * 1)
  97   2                  3600sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 3)
  98   2                  7200sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 6)
  99   2                  ...
 100   2                  ÂÅáËÆæ‰πãÂêéÊòØÔºö
 101   2                  (1200 * 9)
 102   2                  (1200 * 12)
 103   2                  (1200 * 15)
 104   2                  ...
 105   2                  ÊØèÊ¨°ÂèòÂåñÁ∫¶10%Âç†Á©∫ÊØî
 106   2              */
 107   2      
 108   2              if (light_adjust_time_cnt >= (1200 * light_ctl_phase_in_rate_1)) // Â¶ÇÊûúÂà∞‰∫ÜË∞ÉËäÇÊó∂Èó¥
 109   2              {
 110   3                  light_adjust_time_cnt = 0;
 111   3      
 112   3                  if (1 == light_ctl_phase_in_rate_1)
 113   3                  {
 114   4                      light_ctl_phase_in_rate_1 = 3;
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/17/2025 14:33:59 PAGE 3   

 115   4                  }
 116   3                  else
 117   3                  {
 118   4                      light_ctl_phase_in_rate_1 += 3;
 119   4                  }
 120   3      
 121   3                  // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
 122   3                  if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 10 / 100))
 123   3                  {
 124   4                      // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + 10%Ôºå ÂáèÂ∞ë10%Âç†Á©∫ÊØî
 125   4                      expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 10 / 100;
 126   4                  }
 127   3                  else
 128   3                  {
 129   4                      // 4.8%Âç†Á©∫ÊØî
 130   4                      expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 131   4                  }
 132   3              }
 133   2          }
 134   1          else // 2 == cur_discharge_rate || 3 == cur_discharge_rate
 135   1          {
 136   2              /*
 137   2                  ‰∏ÄÂºÄÂßãÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 138   2                  ‰ªé47%ÂºÄÂßãÔºåÊØè240sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 139   2                  ‰ªé42%ÂºÄÂßãÔºåÊØè420sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 140   2      
 141   2                  ÊöÇÂÆöÊØèÊ¨°Èôç‰Ωé 0.6%
 142   2              */
 143   2      
 144   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®47%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨47%ÔºåÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 145   2              if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 47 / 100)
 146   2              {
 147   3                  if (light_adjust_time_cnt >= 40)
 148   3                  {
 149   4                      light_adjust_time_cnt = 0;
 150   4      
 151   4                      if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 10
             -00))
 152   4                      {
 153   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 154   5                          expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 155   5                      }
 156   4                      else
 157   4                      {
 158   5                          // 4.8%Âç†Á©∫ÊØî
 159   5                          expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 160   5                      }
 161   4                  }
 162   3              }
 163   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨42%ÔºåÊØè240ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 164   2              else if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 42 / 100)
 165   2              {
 166   3                  if (light_adjust_time_cnt >= 240)
 167   3                  {
 168   4                      light_adjust_time_cnt = 0;
 169   4      
 170   4                      if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 10
             -00))
 171   4                      {
 172   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 173   5                          expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 174   5                      }
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/17/2025 14:33:59 PAGE 4   

 175   4                      else
 176   4                      {
 177   5                          // 4.8%Âç†Á©∫ÊØî
 178   5                          expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 179   5                      }
 180   4                  }
 181   3              }
 182   2              else // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%Âèä‰ª•‰∏ãÔºåÊØè420ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 183   2              {
 184   3                  if (light_adjust_time_cnt >= 420)
 185   3                  {
 186   4                      light_adjust_time_cnt = 0;
 187   4      
 188   4                      if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 10
             -00))
 189   4                      {
 190   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 191   5                          expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 192   5                      }
 193   4                      else
 194   4                      {
 195   5                          // 4.8%Âç†Á©∫ÊØî
 196   5                          expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 197   5                      }
 198   4                  }
 199   3              }
 200   2          } // ÊîæÁîµÈÄüÁéáM2ÔºåÊîæÁîµÈÄüÁéáM3
 201   1      
 202   1          // // Â¶ÇÊûúÁºìÊÖ¢Ë∞ÉËäÇPWMÂç†Á©∫ÊØîÁöÑÊó∂Èó¥Âà∞Êù• -- ÈúÄË¶ÅÊîæÂà∞ÂÆöÊó∂Âô®‰∏≠Êñ≠Ë∞ÉËäÇÔºå‰∏ªÂæ™ÁéØÁö
             -ÑÊó∂Èó¥ËøáÈïø
 203   1          // if (flag_is_light_pwm_duty_val_adjust_time_come)
 204   1          // {
 205   1          //     flag_is_light_pwm_duty_val_adjust_time_come = 0;
 206   1      
 207   1          //     if (cur_light_pwm_duty_val > expect_light_pwm_duty_val)
 208   1          //     {
 209   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ∞èÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 210   1          //         cur_light_pwm_duty_val--;
 211   1          //     }
 212   1          //     else if (cur_light_pwm_duty_val < expect_light_pwm_duty_val)
 213   1          //     {
 214   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ§ßÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 215   1          //         cur_light_pwm_duty_val++;
 216   1          //     }
 217   1      
 218   1          //     timer2_set_pwm_duty(cur_light_pwm_duty_val);
 219   1          // }
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    555    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
