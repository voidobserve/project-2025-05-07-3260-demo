C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LIGHT_HANDLE
OBJECT MODULE PLACED IN .\Release\Objects\light_handle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\light_handle.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(0X000
                    -C) INCDIR(..\..\Libraries\Include;..\..\User;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\lig
                    -ht_handle.lst) OBJECT(.\Release\Objects\light_handle.obj)

line level    source

   1          // encoding UTF-8
   2          // ÁÅØÂÖâÊéßÂà∂Ê∫êÁ®ãÂ∫è
   3          #include "light_handle.h"
   4          
   5          void light_blink(u8 blink_cnt)
   6          {
   7   1          // u8 i;
   8   1          // for (i = 0; i < 3; i++)
   9   1          // {
  10   1          //     LIGHT_ON();
  11   1          //     delay_ms(161);
  12   1          //     LIGHT_OFF();
  13   1          //     delay_ms(161);
  14   1          // }
  15   1      
  16   1          light_ctl_blink_times = blink_cnt;
  17   1          flag_is_ctl_light_blink = 1; // ‰ΩøËÉΩ‰∏ªÁÅØÂÖâÈó™ÁÉÅ
  18   1      }
  19          
  20          void light_init(void)
  21          {
  22   1          /* Ê†πÊçÆÂàùÂßãÁöÑÊîæÁîµÊå°‰ΩçÊù•ËÆæÂÆöÁÅØÂÖâÂØπÂ∫îÁöÑpwmÂç†Á©∫ÊØî */
  23   1      
  24   1      #if 0
                  switch (cur_initial_discharge_gear)
                  {
                  case 1:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 1Ê°£ÔºåÂàöÂºÄÂßãÊòØ 83.67%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 8367 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 8367 / 10000);
              
                      break;
              
                  case 2:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 2Ê°£ÔºåÂàöÂºÄÂßãÊòØ 74.11%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 7411 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 7411 / 10000);
              
                      break;
              
                  case 3:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 3Ê°£ÔºåÂàöÂºÄÂßãÊòØ 64.55%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 6455 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 6455 / 10000);
              
                      break;
              
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 2   

                  case 4:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 4Ê°£ÔºåÂàöÂºÄÂßãÊòØ 56.98%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 5698 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 5698 / 10000);
              
                      break;
              
                  case 5:
                      // ÂàùÂßãÊîæÁîµÊå°‰Ωç 5Ê°£ÔºåÂàöÂºÄÂßãÊòØ 49.8%ÂºÄÂßãÊîæÁîµ
              
                      // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
                      // expect_light_pwm_duty_val = ((u32)TIMER2_FEQ * 4980 / 10000);
                      cur_light_pwm_duty_val = ((u32)TIMER2_FEQ * 4980 / 10000);
              
                      break;
                  }
              #endif
  73   1      
  74   1          cur_light_pwm_duty_val = light_pwm_duty_init_val_table[cur_initial_discharge_gear - 1];
  75   1      
  76   1          // cur_light_pwm_duty_val = expect_light_pwm_duty_val;
  77   1          timer2_set_pwm_duty(cur_light_pwm_duty_val); // Á´ãÂàªÊõ¥Êñ∞PWMÂç†Á©∫ÊØî
  78   1          LIGHT_ON();                                  // ‰ΩøËÉΩPWMËæìÂá∫
  79   1          // light_blink();
  80   1          light_blink(3); // ÂºÄÊú∫ÂâçÔºå‰∏ªÁÅØÈúÄË¶ÅÈó™ÁÉÅ
  81   1          light_adjust_time_cnt = 0;
  82   1      }
  83          
  84          /**
  85           * @brief ÁÅØÂÖâÊéßÂà∂ÔºàÊîæÁîµÊéßÂà∂Ôºâ
  86           *          ËøõÂÖ•ÂâçË¶ÅÂÖàÁ°ÆËÆ§ expect_light_pwm_duty_val ÁöÑÂÄºÊòØÂê¶ÂàùÂßãÂåñËøá‰∏ÄÊ¨°Ôºå
  87           *          ËøõÂÖ•ÂâçË¶ÅÂÖàÁ°ÆËÆ§ cur_light_pwm_duty_val ÁöÑÂÄºÊòØÂê¶ÂàùÂßãÂåñËøá‰∏ÄÊ¨°Ôºå
  88           *          light_adjust_time_cntË∞ÉËäÇÁÅØÂÖâÁöÑÊó∂Èó¥ËÆ°Êó∂ÊòØÂê¶Ê≠£Á°ÆÔºåÂ¶ÇÊûúÂàáÊç¢‰∫ÜÊ®°ÂºèÊàñÊîæÁîµÈ
             -ÄüÂ∫¶ÔºåË¶ÅÂÖàÊ∏ÖÈõ∂
  89           */
  90          void light_handle(void)
  91          {
  92   1          // if (flag_is_need_to_exit_setting_mode_close_light && 0 == flag_is_in_setting_mode)
  93   1          // {
  94   1          //     LIGHT_OFF();
  95   1          //     flag_is_need_to_exit_setting_mode_close_light = 0;
  96   1          // }
  97   1      
  98   1          // Â¶ÇÊûúÊ≠£Âú®ÂÖÖÁîµÔºåÁõ¥Êé•ËøîÂõû
  99   1          if (cur_charge_phase != CUR_CHARGE_PHASE_NONE ||
 100   1              cur_led_mode == CUR_LED_MODE_OFF) /* Â¶ÇÊûúÊåáÁ§∫ÁÅØÂ∑≤ÁªèÂÖ≥Èó≠ */
 101   1          {
 102   2              return;
 103   2          }
 104   1      
 105   1          // Â¶ÇÊûúÊú™Âú®ÂÖÖÁîµ
 106   1      
 107   1          // if (flag_is_light_adjust_time_come)
 108   1          // {
 109   1          //     flag_is_light_adjust_time_come = 0;
 110   1          //     light_adjust_time_cnt++;
 111   1          // }
 112   1      
 113   1          if (1 == cur_discharge_rate) // ÊîæÁîµÈÄüÁéá1Ê°£ÔºåM1
 114   1          {
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 3   

 115   2              /*
 116   2                  ÈÄüÂ∫¶‰∏∫M1Ôºå
 117   2                  1200sÂêéÂèòÂåñ‰∏ÄÊ¨°Âç†Á©∫ÊØîÔºå(1200 * 1)
 118   2                  3600sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 3)
 119   2                  7200sÂêéÂÜçÂèòÂåñ‰∏ÄÊ¨°Ôºå    (1200 * 6)
 120   2                  ...
 121   2                  ÂÅáËÆæ‰πãÂêéÊòØÔºö
 122   2                  (1200 * 9)
 123   2                  (1200 * 12)
 124   2                  (1200 * 15)
 125   2                  ...
 126   2                  ÊØèÊ¨°ÂèòÂåñÁ∫¶10%Âç†Á©∫ÊØî
 127   2              */
 128   2      
 129   2              if (light_adjust_time_cnt >= (1200 * light_ctl_phase_in_rate_1)) // Â¶ÇÊûúÂà∞‰∫ÜË∞ÉËäÇÊó∂Èó¥
 130   2              {
 131   3                  light_adjust_time_cnt = 0;
 132   3      
 133   3                  if (1 == light_ctl_phase_in_rate_1)
 134   3                  {
 135   4                      light_ctl_phase_in_rate_1 = 3;
 136   4                  }
 137   3                  else
 138   3                  {
 139   4                      light_ctl_phase_in_rate_1 += 3;
 140   4                  }
 141   3      
 142   3                  // ÂÆöÊó∂Âô®ÂØπÂ∫îÁöÑÈáçË£ÖËΩΩÂÄºÊúÄÂ§ßÂÄº ÂØπÂ∫î 100%Âç†Á©∫ÊØî
 143   3                  // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 10 / 10
             -0))
 144   3                  // {
 145   3                  //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + 10%Ôºå ÂáèÂ∞ë10%Âç†Á©∫ÊØî
 146   3                  //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 10 / 100;
 147   3                  // }
 148   3                  // else
 149   3                  // {
 150   3                  //     // 4.8%Âç†Á©∫ÊØî
 151   3                  //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 152   3                  // }
 153   3                  if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 10 / 100))
 154   3                  {
 155   4                      // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + 10%Ôºå ÂáèÂ∞ë10%Âç†Á©∫ÊØî
 156   4                      cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 10 / 100;
 157   4                  }
 158   3                  else
 159   3                  {
 160   4                      // 4.8%Âç†Á©∫ÊØî
 161   4                      cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 162   4                  }
 163   3              }
 164   2          }
 165   1          else // 2 == cur_discharge_rate || 3 == cur_discharge_rate
 166   1          {
 167   2              /*
 168   2                  ‰∏ÄÂºÄÂßãÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 169   2                  ‰ªé47%ÂºÄÂßãÔºåÊØè240sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 170   2                  ‰ªé42%ÂºÄÂßãÔºåÊØè420sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 171   2      
 172   2                  ÊöÇÂÆöÊØèÊ¨°Èôç‰Ωé 0.6%
 173   2              */
 174   2      
 175   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®47%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨47%ÔºåÊØè40sÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 4   

 176   2              if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 47 / 100)
 177   2              {
 178   3                  if (light_adjust_time_cnt >= 40)
 179   3                  {
 180   4                      light_adjust_time_cnt = 0;
 181   4      
 182   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 183   4                      // {
 184   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 185   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 186   4                      // }
 187   4                      // else
 188   4                      // {
 189   4                      //     // 4.8%Âç†Á©∫ÊØî
 190   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 191   4                      // }
 192   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 193   4                      {
 194   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 195   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 196   5                      }
 197   4                      else
 198   4                      {
 199   5                          // 4.8%Âç†Á©∫ÊØî
 200   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 201   5                      }
 202   4                  }
 203   3              }
 204   2              // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%‰ª•‰∏äÊó∂Ôºå‰∏çÂåÖÊã¨42%ÔºåÊØè240ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
 205   2              else if (cur_light_pwm_duty_val > (u32)TIMER2_FEQ * 42 / 100)
 206   2              {
 207   3                  if (light_adjust_time_cnt >= 240)
 208   3                  {
 209   4                      light_adjust_time_cnt = 0;
 210   4      
 211   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 212   4                      // {
 213   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 214   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 215   4                      // }
 216   4                      // else
 217   4                      // {
 218   4                      //     // 4.8%Âç†Á©∫ÊØî
 219   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 220   4                      // }
 221   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 222   4                      {
 223   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 224   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 225   5                      }
 226   4                      else
 227   4                      {
 228   5                          // 4.8%Âç†Á©∫ÊØî
 229   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 230   5                      }
 231   4                  }
 232   3              }
 233   2              else // ÂΩìÂâçÁöÑÂç†Á©∫ÊØîÂú®42%Âèä‰ª•‰∏ãÔºåÊØè420ÁßíÈôç‰Ωé‰∏ÄÊ¨°Âç†Á©∫ÊØî
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 5   

 234   2              {
 235   3                  if (light_adjust_time_cnt >= 420)
 236   3                  {
 237   4                      light_adjust_time_cnt = 0;
 238   4      
 239   4                      // if (expect_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 /
             - 1000))
 240   4                      // {
 241   4                      //     // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 242   4                      //     expect_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 243   4                      // }
 244   4                      // else
 245   4                      // {
 246   4                      //     // 4.8%Âç†Á©∫ÊØî
 247   4                      //     expect_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 248   4                      // }
 249   4                      if (cur_light_pwm_duty_val >= ((u32)TIMER2_FEQ * 48 / 1000) + ((u32)TIMER2_FEQ * 6 / 1000)
             -)
 250   4                      {
 251   5                          // Â¶ÇÊûú‰ªçÂ§ß‰∫é 4.8% + xx %Ôºå ÂáèÂ∞ë xx %Âç†Á©∫ÊØî
 252   5                          cur_light_pwm_duty_val -= (u32)TIMER2_FEQ * 6 / 1000;
 253   5                      }
 254   4                      else
 255   4                      {
 256   5                          // 4.8%Âç†Á©∫ÊØî
 257   5                          cur_light_pwm_duty_val = (u32)TIMER2_FEQ * 48 / 1000;
 258   5                      }
 259   4                  }
 260   3              }
 261   2          } // ÊîæÁîµÈÄüÁéáM2ÔºåÊîæÁîµÈÄüÁéáM3
 262   1      
 263   1          // // Â¶ÇÊûúÁºìÊÖ¢Ë∞ÉËäÇPWMÂç†Á©∫ÊØîÁöÑÊó∂Èó¥Âà∞Êù• -- ÈúÄË¶ÅÊîæÂà∞ÂÆöÊó∂Âô®‰∏≠Êñ≠Ë∞ÉËäÇÔºå‰∏ªÂæ™ÁéØÁö
             -ÑÊó∂Èó¥ËøáÈïø
 264   1          // if (flag_is_light_pwm_duty_val_adjust_time_come)
 265   1          // {
 266   1          //     flag_is_light_pwm_duty_val_adjust_time_come = 0;
 267   1      
 268   1          //     if (cur_light_pwm_duty_val > expect_light_pwm_duty_val)
 269   1          //     {
 270   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ∞èÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 271   1          //         cur_light_pwm_duty_val--;
 272   1          //     }
 273   1          //     else if (cur_light_pwm_duty_val < expect_light_pwm_duty_val)
 274   1          //     {
 275   1          //         // Â¶ÇÊûúË¶ÅË∞ÉÂ§ßÁÅØÂÖâÁöÑÂç†Á©∫ÊØî
 276   1          //         cur_light_pwm_duty_val++;
 277   1          //     }
 278   1      
 279   1          //     timer2_set_pwm_duty(cur_light_pwm_duty_val);
 280   1          // }
 281   1          LIGHT_SET_PWM_DUTY(cur_light_pwm_duty_val);
 282   1      }
 283          
 284          void light_set_pwm_duty(u16 pwm_duty_val)
 285          {
 286   1          timer2_set_pwm_duty(pwm_duty_val);
 287   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    482    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   LIGHT_HANDLE                                                      07/18/2025 17:29:26 PAGE 6   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
